version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3030:3030"
    environment:
      NODE_ENV: development
      DEBUG: 'true'
    volumes:
      - .:/usr/src/app
    command: yarn start --port 3030
    depends_on:
      - kafka
      - redis
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_LISTENER_NAME: INSIDE
      KAFKA_LISTENER_PORT: 9092
      KAFKA_LISTENER_HOSTNAME: kafka
      KAFKA_LISTENER_INTERNAL: 'true'
      KAFKA_LISTENER_DEFAULT: INSIDE
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - app-network

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      - app-network

  redis:
    image: redis/redis-stack-server:latest
    ports:
      - "6379:6379"
    networks:
      - app-network

  redisinsight:
    container_name: redisinsight
    image: redislabs/redisinsight:latest
    ports:
      - "5400:5400"
    depends_on:
      - redis
    environment:
      REDISINSIGHT_UI_USERNAME: admin
      REDISINSIGHT_UI_PASSWORD: admin
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
